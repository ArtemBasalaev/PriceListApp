// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PriceList.DataAccess;

#nullable disable

namespace PriceList.DataAccess.Migrations
{
    [DbContext(typeof(PriceListDbContext))]
    partial class PriceListDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PriceList.DataAccess.Models.Column", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Columns");
                });

            modelBuilder.Entity("PriceList.DataAccess.Models.DataType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("DataTypes");
                });

            modelBuilder.Entity("PriceList.DataAccess.Models.DecimalColumnData", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("Decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("DecimalColumnData");
                });

            modelBuilder.Entity("PriceList.DataAccess.Models.IntegerColumnData", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("IntegerColumnData");
                });

            modelBuilder.Entity("PriceList.DataAccess.Models.PriceList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PriceLists");
                });

            modelBuilder.Entity("PriceList.DataAccess.Models.PriceListColumn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColumnId")
                        .HasColumnType("int");

                    b.Property<int>("DataTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PriceListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("DataTypeId");

                    b.HasIndex("PriceListId");

                    b.ToTable("PriceListColumns");
                });

            modelBuilder.Entity("PriceList.DataAccess.Models.PriceListData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PriceListColumnId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PriceListColumnId");

                    b.HasIndex("ProductId");

                    b.ToTable("PriceListData");
                });

            modelBuilder.Entity("PriceList.DataAccess.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("PriceList.DataAccess.Models.TextColumnData", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("TextColumnData");
                });

            modelBuilder.Entity("PriceList.DataAccess.Models.DecimalColumnData", b =>
                {
                    b.HasOne("PriceList.DataAccess.Models.PriceListData", "PriceListData")
                        .WithOne("DecimalColumnData")
                        .HasForeignKey("PriceList.DataAccess.Models.DecimalColumnData", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PriceListData");
                });

            modelBuilder.Entity("PriceList.DataAccess.Models.IntegerColumnData", b =>
                {
                    b.HasOne("PriceList.DataAccess.Models.PriceListData", "PriceListData")
                        .WithOne("IntegerColumnData")
                        .HasForeignKey("PriceList.DataAccess.Models.IntegerColumnData", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PriceListData");
                });

            modelBuilder.Entity("PriceList.DataAccess.Models.PriceListColumn", b =>
                {
                    b.HasOne("PriceList.DataAccess.Models.Column", "Column")
                        .WithMany("PriceListColumns")
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PriceList.DataAccess.Models.DataType", "DataType")
                        .WithMany("PriceListColumns")
                        .HasForeignKey("DataTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PriceList.DataAccess.Models.PriceList", "PriceList")
                        .WithMany("PriceListColumns")
                        .HasForeignKey("PriceListId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Column");

                    b.Navigation("DataType");

                    b.Navigation("PriceList");
                });

            modelBuilder.Entity("PriceList.DataAccess.Models.PriceListData", b =>
                {
                    b.HasOne("PriceList.DataAccess.Models.PriceListColumn", "PriceListColumn")
                        .WithMany("PriceListData")
                        .HasForeignKey("PriceListColumnId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PriceList.DataAccess.Models.Product", "Product")
                        .WithMany("PriceListData")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PriceListColumn");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PriceList.DataAccess.Models.TextColumnData", b =>
                {
                    b.HasOne("PriceList.DataAccess.Models.PriceListData", "PriceListData")
                        .WithOne("TexColumnData")
                        .HasForeignKey("PriceList.DataAccess.Models.TextColumnData", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PriceListData");
                });

            modelBuilder.Entity("PriceList.DataAccess.Models.Column", b =>
                {
                    b.Navigation("PriceListColumns");
                });

            modelBuilder.Entity("PriceList.DataAccess.Models.DataType", b =>
                {
                    b.Navigation("PriceListColumns");
                });

            modelBuilder.Entity("PriceList.DataAccess.Models.PriceList", b =>
                {
                    b.Navigation("PriceListColumns");
                });

            modelBuilder.Entity("PriceList.DataAccess.Models.PriceListColumn", b =>
                {
                    b.Navigation("PriceListData");
                });

            modelBuilder.Entity("PriceList.DataAccess.Models.PriceListData", b =>
                {
                    b.Navigation("DecimalColumnData")
                        .IsRequired();

                    b.Navigation("IntegerColumnData")
                        .IsRequired();

                    b.Navigation("TexColumnData")
                        .IsRequired();
                });

            modelBuilder.Entity("PriceList.DataAccess.Models.Product", b =>
                {
                    b.Navigation("PriceListData");
                });
#pragma warning restore 612, 618
        }
    }
}
